@model EatryOnline.FoodItem

@{
    ViewBag.Title = "AddFoodItem";
}

@{
    <html>
    <head>

        <style>
            h4 {
                color: #ffb606;
                font-weight: bold;
            }

            .section {
                margin: 200px;
                margin-left: 50px;
                margin-right: 50px;
                padding: 0 5px;
                background-color: snow;
            }

            label {
                display: block;
                font-weight: bold;
                margin: 5px 0;
            }

            input {
                padding: 2px;
                border: 1px solid #eee;
                font: normal 1em Verdana, sans-serif;
                color: #777;
            }

            back {
                background-repeat: no-repeat;
                background-position: center;
            }
        </style>

    </head>
    <body>
    </body>

</html>
}

@using (Html.BeginForm("AddFoodItem", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Add Food Item</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FoodName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.FoodName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FoodName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.IsSpecial, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.IsSpecial, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsSpecial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.imagepath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                <div class="col-md-10">

                    <input type="file" name="ImageFile" required />
                </div>
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}


@if (TempData["Message"] != null)
{
    <script type="text/javascript">
        window.onload = function() {
            alert("@(TempData["Message"] as string)");
        };
    </script>
}


