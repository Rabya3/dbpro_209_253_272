@model EatryOnline.Models.CustomerViewModel

@{
    ViewBag.Title = "CreateCustomer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@{
    <html>
    <head>

     <style>
     h2 {
                color: #ffb606;
                font-weight: bold;
      }
     form {
  margin:30px; 
  padding: 0 5px;
  
  /*background-image:url("~/Content/banner-bg.jpg")*/ 
}
label {
  display:block;
  font-weight:bold;
  margin:5px 0;
}
input {
  padding:2px;
  border:1px solid #eee;
  font: normal 1em Verdana, sans-serif;
  color:#777;
}
back{
    background-repeat:no-repeat;
    background-position:center
}
        </style>
        
    </head>
  <body 
      background="~/Content/banner-bg1.jpg">
        

  </body>

</html>
}



@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

   
    <center>

 <div class="form">  

  

     <div class="w3-container">
         <center><h2>Sign Up</h2></center>
         <center>
             <p>jhbfdhd</p>
         </center>

     </div>
     <div class="w3-container">

         <center><h2>Sign Up</h2></center>

     </div>
   <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SQuestion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.SQuestion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SQuestion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SAnswer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.SAnswer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SAnswer, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">

                <input type="submit" style="background-color:darkblue;color:white;width:130px; border-radius: 12px;
                height:40px;" value="Register">
            </div>
        </div>
    </div>
    <div class="w3-container">


    </div>
        </center>
}
       

@if (TempData["Message"] != null)
{
    <script type="text/javascript">
        window.onload = function() {
            alert("@(TempData["Message"] as string)");
        };
    </script>
}


<center><div>
    @Html.ActionLink("Already have an account?", "Login")
</div></center>



